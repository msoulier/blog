<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on But I Digress</title>
    <link>http://127.0.0.1:8000/tags/python/</link>
    <description>Recent content in Python on But I Digress</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 13 Sep 2025 18:55:32 -0400</lastBuildDate>
    <atom:link href="http://127.0.0.1:8000/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go for desktop tools over Python</title>
      <link>http://127.0.0.1:8000/posts/go-desktop-tools/</link>
      <pubDate>Sat, 13 Sep 2025 22:47:00 -0400</pubDate>
      <guid>http://127.0.0.1:8000/posts/go-desktop-tools/</guid>
      <description>&lt;p&gt;So for some time I have primarily used &lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt; as my language of choice for most&#xA;projects, and for my own desktop tools. Python is a very powerful choice for&#xA;server-side solutions, and can definitely be used for desktop tools but does&#xA;offer some problems.&lt;/p&gt;&#xA;&lt;p&gt;Inevitably, Python solutions require Python modules. If your OS packages them&#xA;then maybe you can use the native packaging solution to install them, but I&#xA;often find that this is not the case. I don&amp;rsquo;t like to install modules globally&#xA;outside of the packaging system, so I end up making liberal use of &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34;&gt;virtualenvs&lt;/a&gt;,&#xA;but then it gets worse when you need a specific Python version.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
